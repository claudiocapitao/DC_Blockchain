[{"C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\index.js":"1","C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\App.js":"2","C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\reportWebVitals.js":"3","C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\reducers\\app.reducers.js":"4","C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\Components\\Login.js":"5","C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\Components\\CreateKeys.js":"6","C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\Components\\NavbarDC.js":"7","C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\Components\\Dashboard.js":"8","C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\Components\\Account.js":"9","C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\actions\\app.action.js":"10","C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\Components\\class.js":"11","C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\Components\\BlockchainAPI.js":"12","C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\Components\\transaction_class.js":"13"},{"size":738,"mtime":1613739181138,"results":"14","hashOfConfig":"15"},{"size":779,"mtime":1613739181118,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1613739181141,"results":"17","hashOfConfig":"15"},{"size":778,"mtime":1613739181141,"results":"18","hashOfConfig":"15"},{"size":3798,"mtime":1613739181126,"results":"19","hashOfConfig":"15"},{"size":3039,"mtime":1613739181124,"results":"20","hashOfConfig":"15"},{"size":811,"mtime":1613739181129,"results":"21","hashOfConfig":"15"},{"size":1880,"mtime":1614180681578,"results":"22","hashOfConfig":"15"},{"size":7583,"mtime":1614189587133,"results":"23","hashOfConfig":"15"},{"size":358,"mtime":1613739181137,"results":"24","hashOfConfig":"15"},{"size":196,"mtime":1613739181130,"results":"25","hashOfConfig":"15"},{"size":808,"mtime":1613739181121,"results":"26","hashOfConfig":"15"},{"size":472,"mtime":1613739181135,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1csp0if",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\index.js",[],["58","59"],"C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\App.js",[],"C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\reportWebVitals.js",[],"C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\reducers\\app.reducers.js",["60"],"import { STORE_USER_DATA, STORE_LATESTBLOCK_DATA } from '../actions/app.action';\r\n\r\nconst initialState = {\r\n    user: false,\r\n    loggedIn: false,\r\n    block: false\r\n};\r\n\r\nfunction appReducer(state = initialState, action) {\r\n    console.warn(\"App reducer invoked with state: \" + JSON.stringify(state) + \" with action \" + JSON.stringify(action));\r\n\r\n    switch (action.type) {\r\n        case STORE_USER_DATA:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n                loggedIn: !!action.user\r\n            };\r\n\r\n        case STORE_LATESTBLOCK_DATA:\r\n            return {\r\n                ...state,\r\n                block: action.block\r\n            }\r\n    }\r\n\r\n    return {\r\n        ...initialState\r\n    };\r\n}\r\n\r\nexport default appReducer;","C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\Components\\Login.js",["61","62","63","64","65"],"import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport { Link } from 'react-router-dom';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as actions from '../actions/app.action';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            pubInput: \"\",\r\n            privInput: \"\",\r\n            showSuccess: false,\r\n            variant: \"success\",\r\n            text: '',\r\n            value: false,\r\n            to: false,\r\n            id: \"\",\r\n            balance: 0\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setPubInput = (e) => {\r\n        const input = e.target.value;\r\n        this.setState({\r\n            pubInput: input\r\n        })\r\n    }\r\n\r\n    setPrivInput = (e) => {\r\n        const input = e.target.value;\r\n        this.setState({\r\n            privInput: input\r\n        })\r\n    }\r\n    authentication = async () => {\r\n\r\n        // get users from the api\r\n\r\n        try {\r\n            const response = await axios.get(`http://localhost:4000/users`);\r\n            const user = response.data;\r\n            console.log(user);\r\n            user.map(user => {\r\n                if (user.publicKey === this.state.pubInput &&\r\n                    user.privateKey === this.state.privInput) {\r\n                    const currentUser = user;\r\n                    this.props.actions.storeUserData(currentUser)\r\n                    this.props.history.push(\"/account\")\r\n                    this.setState({\r\n                        value: true,\r\n\r\n\r\n                    })\r\n\r\n                }\r\n\r\n\r\n            })\r\n\r\n            if (this.state.value = false) {\r\n                this.setState({\r\n                    to: \"/empty\"\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.log('Error: ' + err)\r\n        }\r\n\r\n        console.log('hello world')\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Alert variant={this.state.variant} show={this.state.showSuccess}>\r\n                    {this.state.text}\r\n                </Alert>\r\n                <Form>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Publicaddress:<span>*</span></Form.Label>\r\n                        <Form.Control value={this.state.pubInput}\r\n                            onChange={this.setPubInput} type=\"text\" required />\r\n                        <Form.Text className=\"text-muted\">\r\n                            The E-Mail address on which we will reply, <strong>won't be shared with any third parties!</strong>\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"textarea\">\r\n                        <Form.Label>Privatekey<span>*</span></Form.Label>\r\n                        <Form.Control value={this.state.privInput} onChange={this.setPrivInput} required />\r\n                        <Form.Text className=\"text-muted\">\r\n                            Place your message here, <strong>won't be shared with any third parties!</strong>\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Button onClick={this.authentication}>\r\n                        <Link to={this.state.to} value={false} >Log in</Link></Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({ applicationState: state });\r\nconst mapDispatchToProps = dispatch => ({ actions: bindActionCreators(actions, dispatch) });\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\Components\\CreateKeys.js",["66"],"import React, { Component } from 'react'\r\nimport { Button } from 'react-bootstrap';\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport User from './class';\r\nimport BlockchainAPI from './BlockchainAPI';\r\nimport axios from 'axios';\r\nimport './CreateKeys.css';\r\nimport { Link } from 'react-router-dom';\r\nclass CreateKeys extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            publicKey: \"\",\r\n            privateKey: \"\",\r\n            showButton: false,\r\n            showAlert: false,\r\n            variant: \"warning\",\r\n            balance: 100,\r\n\r\n        }\r\n        this.user = User;\r\n        this.api = BlockchainAPI;\r\n    }\r\n\r\n\r\n    generateKeys = async () => {\r\n\r\n        const EC = require('elliptic').ec;\r\n        const ec = new EC('secp256k1');\r\n        const key = ec.genKeyPair();\r\n        setTimeout(async () => {\r\n            this.setState({\r\n                publicKey: key.getPublic('hex'),\r\n                privateKey: key.getPrivate('hex'),\r\n                showButton: true,\r\n            })\r\n\r\n            const user = {\r\n                publicKey: this.state.publicKey,\r\n                privateKey: this.state.privateKey,\r\n                balance: this.state.balance\r\n            }\r\n\r\n            try {\r\n                const response = await axios.post('http://localhost:4000/users/add', user);\r\n                console.log(response.data);\r\n            } catch (err) {\r\n                console.log('Error: ' + err)\r\n            }\r\n        }, 100)\r\n\r\n\r\n\r\n        // this.postUserData(user);\r\n\r\n        //Post method\r\n\r\n    }\r\n\r\n    postUserData = async (user) => {\r\n        try {\r\n            const response = await axios.post(`http:localhost:4000/users/add`, user);\r\n            console.log(response.data);\r\n        } catch (err) {\r\n            console.log('Error: ' + err)\r\n        }\r\n    }\r\n\r\n    generateUser = () => {\r\n        const user = {\r\n            publicKey: this.state.publicKey,\r\n            privateKey: this.state.privateKey,\r\n            balance: this.state.balance\r\n        }\r\n\r\n        return this.state.user;\r\n\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"keys\">\r\n                <Alert variant={this.state.variant} show={this.state.showAlert}>\r\n                    Your public and private Key are unique. Make sure to store it safely.<br />\r\n                If you are losing one of them, you will never be able to access your account again!!!.\r\n                </Alert>\r\n                <p>Your public key: {this.state.publicKey}</p>\r\n                <p>Your private key: {this.state.privateKey}</p>\r\n                <Button variant=\"outline-info\"\r\n                    onClick={this.generateKeys}\r\n                    disabled={this.state.showButton}>\r\n                    Generate Wallet\r\n                </Button>\r\n                <Button variant=\"outline-info\">\r\n                    <Link to=\"/login\" >Return to login</Link>\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CreateKeys; ","C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\Components\\NavbarDC.js",[],"C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\Components\\Dashboard.js",["67"],"C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\Components\\Account.js",["68","69","70","71","72","73","74","75","76","77"],"C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\actions\\app.action.js",[],"C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\Components\\class.js",[],"C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\Components\\BlockchainAPI.js",[],"C:\\Users\\DavidWZ\\Documents\\GitHub\\DC_Blockchain\\DC_FrontEnd\\src\\Components\\transaction_class.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":12,"column":5,"nodeType":"84","messageId":"85","endLine":25,"endColumn":6},{"ruleId":"86","severity":1,"message":"87","line":6,"column":27,"nodeType":"88","messageId":"89","endLine":6,"endColumn":33},{"ruleId":"86","severity":1,"message":"90","line":6,"column":35,"nodeType":"88","messageId":"89","endLine":6,"endColumn":40},{"ruleId":"86","severity":1,"message":"91","line":6,"column":42,"nodeType":"88","messageId":"89","endLine":6,"endColumn":48},{"ruleId":"92","severity":1,"message":"93","line":52,"column":27,"nodeType":"94","messageId":"95","endLine":52,"endColumn":29},{"ruleId":"96","severity":1,"message":"97","line":69,"column":17,"nodeType":"98","messageId":"99","endLine":69,"endColumn":41},{"ruleId":"86","severity":1,"message":"100","line":71,"column":15,"nodeType":"88","messageId":"89","endLine":71,"endColumn":19},{"ruleId":"86","severity":1,"message":"101","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":16},{"ruleId":"86","severity":1,"message":"102","line":5,"column":8,"nodeType":"88","messageId":"89","endLine":5,"endColumn":19},{"ruleId":"86","severity":1,"message":"103","line":16,"column":21,"nodeType":"88","messageId":"89","endLine":16,"endColumn":31},{"ruleId":"86","severity":1,"message":"104","line":20,"column":30,"nodeType":"88","messageId":"89","endLine":20,"endColumn":49},{"ruleId":"86","severity":1,"message":"105","line":22,"column":21,"nodeType":"88","messageId":"89","endLine":22,"endColumn":31},{"ruleId":"86","severity":1,"message":"106","line":23,"column":25,"nodeType":"88","messageId":"89","endLine":23,"endColumn":39},{"ruleId":"86","severity":1,"message":"107","line":24,"column":18,"nodeType":"88","messageId":"89","endLine":24,"endColumn":25},{"ruleId":"86","severity":1,"message":"108","line":25,"column":12,"nodeType":"88","messageId":"89","endLine":25,"endColumn":23},{"ruleId":"109","severity":1,"message":"110","line":86,"column":8,"nodeType":"111","endLine":86,"endColumn":10,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"110","line":95,"column":8,"nodeType":"111","endLine":95,"endColumn":19,"suggestions":"113"},{"ruleId":"109","severity":1,"message":"114","line":134,"column":8,"nodeType":"111","endLine":134,"endColumn":26,"suggestions":"115"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'user' is assigned a value but never used.","'Button' is defined but never used.","'Transaction' is defined but never used.","'setBalance' is assigned a value but never used.","'setFromAddressInput' is assigned a value but never used.","'setVariant' is assigned a value but never used.","'setShowSuccess' is assigned a value but never used.","'setText' is assigned a value but never used.","'transaction' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["118"],["119"],"React Hook useEffect has a missing dependency: 'fromAddressInput'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFoundHash' needs the current value of 'fromAddressInput'.",["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [socket]",{"range":"127","text":"128"},"Update the dependencies array to be: [foundHash, socket]",{"range":"129","text":"130"},"Update the dependencies array to be: [fromAddressInput, miningData, trig]",{"range":"131","text":"132"},[2733,2735],"[socket]",[3014,3025],"[foundHash, socket]",[4386,4404],"[fromAddressInput, miningData, trig]"]